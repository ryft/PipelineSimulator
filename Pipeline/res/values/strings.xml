<?xml version="1.0" encoding="utf-8"?>
<resources>

    <string name="app_name">Pipeline Simulator</string>
    
    <string name="action_primitive_new">New primitive</string>
    <string name="action_composite_new">New composite</string>
    <string name="action_elements_discard">Clear scene</string>
    
    <string name="action_points_new">New vertex</string>
    <string name="action_points_discard">Discard vertices</string>
    <string name="action_button_help">Help</string>
    <string name="action_button_okay">OK</string>
    <string name="action_button_save">Save</string>
    <string name="action_button_delete">Delete</string>
    <string name="action_button_discard">Discard</string>
    <string name="action_button_cancel">Cancel</string>
    <string name="action_button_simulate">Simulate</string>
    <string name="action_button_exit">Exit</string>
    
    <string name="title_activity_setup">Configure Pipeline</string>
    <string name="title_activity_setup_scene">Scene Composition</string>
    <string name="title_activity_setup_camera">Camera Parameters</string>
    <string name="title_activity_setup_blending">Blending Parameters</string>
    <string name="title_activity_primitive_add">New Primitive</string>
    <string name="title_activity_primitive_edit">Edit Primitive</string>
    <string name="title_activity_cylinder_add">New Cylinder</string>
    <string name="title_activity_cuboid_add">New Cuboid</string>
    <string name="title_activity_camera_add">New Camera</string>
    
    <string name="message_scene_clear">Scene cleared</string>
    <string name="message_element_added">Element added</string>
    <string name="message_element_discarded">Element discarded</string>
    <string name="message_element_updated">Element updated</string>
    <string name="message_element_deleted">Element deleted</string>
    
    <string name="label_element_centre">Centre point</string>
    <string name="label_element_eye">Eye point</string>
    <string name="label_element_frontcolour">Front colour</string>
    <string name="label_element_sidecolour">Side colour</string>
    <string name="label_element_capcolour">Cap colour</string>
    <string name="label_element_bodycolour">Body colour</string>
    <string name="label_element_lenscolour">Lens casing colour</string>
    <string name="label_element_shuttercolour">Shutter button colour</string>
    <string name="label_element_width">Width</string>
    <string name="label_element_height">Height</string>
    <string name="label_element_depth">Depth</string>
    <string name="label_element_scale">Scale (height)</string>
    <string name="label_element_radius">Radius</string>
    <string name="label_element_stepcount">Step count</string>
    <string name="label_element_rotation">Rotation (radians)</string>
    
    <string name="label_point_1">( X:</string>
    <string name="label_point_2">, Y:</string>
    <string name="label_point_3">, Z:</string>
    <string name="label_point_4"> )</string>
    
    <string name="label_camera_view_eye">Eye point</string>
    <string name="label_camera_view_focus">Focus point</string>
    <string name="label_camera_view_up">Up direction</string>
    <string name="label_camera_projection_left">Left clip plane</string>
    <string name="label_camera_projection_right">Right clip plane</string>
    <string name="label_camera_projection_bottom">Bottom clip plane</string>
    <string name="label_camera_projection_top">Top clip plane</string>
    <string name="label_camera_projection_near">Near clip plane</string>
    <string name="label_camera_projection_far">Far clip plane</string>
    
    <string name="label_source">Source</string>
    <string name="label_destination">Destination</string>
    <string name="label_dest">Dest</string>
    
    <string name="label_connector_vertices">vertices ></string>
    <string name="label_connector_primitives">primitives ></string>
    <string name="label_connector_fragments">fragments ></string>
    <string name="label_connector_pixels">pixels ></string>
    
    <string name="heading_camera_view">View parameters</string>
    <string name="heading_camera_projection">Projection (Frustum definition)</string>
    
    <string name="heading_primitive_type">Primitive type</string>
    <string name="heading_primitive_colour">Primitive colour</string>
    <string name="heading_points">Vertices</string>
    
    <string name="heading_element_location">Location</string>
    <string name="heading_element_colours">Colours</string>
    <string name="heading_element_proportions">Size and proportions</string>
    <string name="heading_element_parameters">Other parameters</string>
    
    <string name="heading_blending_function">Pixel Arithmetic Functions</string>
    <string name="heading_blending_equation">Blending Equation</string>
    
    <string name="heading_group_scene_definition">Scene Parameters</string>
    <string name="heading_group_vertex_processing">Vertex Processing</string>
    <string name="heading_group_primitive_processing">Primitive Processing</string>
    <string name="heading_group_rasterisation">Rasterisation</string>
    <string name="heading_group_fragment_processing">Fragment Processing</string>
    <string name="heading_group_pixel_processing">Pixel Processing</string>
    
    <string name="desc_element_icon">Element icon</string>
    <string name="desc_element_edit">Edit element</string>
    <string name="desc_colour_edit">Edit colour</string>
    
    <string name="dialogue_title_point">Edit Vertex</string>
    <string name="dialogue_title_colour">Select Colour</string>
    <string name="dialogue_title_composite_new">Select Type</string>
    <string name="dialogue_title_light_position">Light Source Location</string>
    <string name="dialogue_title_lighting_model">Preview Shaders For:</string>
    <string name="dialogue_title_animation_duration">Select Animation Duration (ms)</string>
    <string name="dialogue_title_vertex_shading">Vertex Shader Code</string>
    <string name="dialogue_title_multisampling">Select Minimum Samples</string>
    <string name="dialogue_title_face_culling">Select Winding Direction</string>
    <string name="dialogue_title_fragment_shading">Fragment Shader Code</string>
    <string name="dialogue_title_depth_buffer_test">Depth Buffer Comparison</string>
    
    <string name="dialogue_button_save">Save</string>
    <string name="dialogue_button_cancel">Cancel</string>
    <string name="dialogue_button_close">Close</string>
    
    <string name="button_scene_composition">Scene composition</string>
    <string name="button_camera_parameters">Camera parameters</string>
    <string name="button_light_position">Light source location</string>
    <string name="button_lighting_model">Lighting preview</string>
    <string name="button_animation_duration">Animation duration</string>
    <string name="button_vertex_assembly">Vertex assembly</string>
    <string name="button_vertex_shading">Vertex shading</string>
    <string name="button_clipping">Viewport mapping and clipping</string>
    <string name="button_multisampling">Multisampling</string>
    <string name="button_face_culling">Face culling</string>
    <string name="button_fragment_shading">Fragment shading</string>
    <string name="button_depth_buffer_test">Depth buffer test</string>
    <string name="button_blending">Blending</string>
   
    <string name="label_vertex_assembly">Vertex Assembly</string>
    <string name="label_vertex_shading">Vertex Shading</string>
    <string name="label_clipping">Viewport Mapping, Clipping</string>
    <string name="label_multisampling">Multisampling</string>
    <string name="label_face_culling">Back Face Culling</string>
    <string name="label_fragment_shading">Fragment Shading</string>
    <string name="label_depth_buffer_test">Depth Buffer Test</string>
    <string name="label_blending">Blending</string>
    
    <string name="desc_clipping">Viewport and clip planes defined by camera parameters</string>
    <string name="desc_hand">Indicator</string>
    
    <string name="desc_camera">Set up the virtual camera from which the scene will be viewed. The view parameters define the view matrix, and the frustum parameters define the projection matrix.\n\nThese are then combined with the model parameters to create the MVP matrix, which is used to draw the scene.</string>
    <string name="desc_blending">The following parameters define how each calculated pixel is blended with the previous contents of the frame buffer.\n\nThe source and destination functions specify how the RGBA blending factors are computed, and the blending equation specifies how these are combined.</string>
    
    <string name="tutorial_vertex_assembly">Vertex array data is prepared by constructing OpenGL Vertex Buffer Objects (VBOs). 3D positions, normal directions and colour values are calculated and inserted into VBOs.\n\nThe vertex shader takes as input the stream of vertices from the resulting buffers.</string>
    <string name="tutorial_vertex_shading">The vertex shader operates on single vertices taken from its input stream. Using the received vertex attributes and global uniform values, it calculates a position and colour for the output vertex.\n\nCommon uses for vertex shading are perspective projection, texturing and Lambertian lighting.</string>
    <string name="tutorial_clipping">The view volume is defined by the virtual camera clip planes. Each vertex position is firstly tested to determine if it\'s out of range.\n\nVertices then undergo viewport mapping, converting from normalised device coords to window (screen) coordinates.</string>
    <string name="tutorial_multisampling">Multisampling is a method for achieving antialiasing to remove jagged diagonal edges from a scene. For each sample pass, a small offset is applied to all screen coordinates.\n\nBy averaging all these samples, the result is a smoother transition of the colours at the edges.</string>
    <string name="tutorial_face_culling">The user-specified winding direction and order of the vertices in each primitive define the facing of each triangle, as well as their order on screen.\n\nThe process of face culling discards all faces which are facing away from the virtual camera, as these should be invisible.</string>
    <string name="tutorial_fragment_shading">The fragment shader takes fragments from the rasterisation process and outputs a depth value, and zero or more colour values to be written to the frame buffer.\n\nFragment shaders are often used for per-pixel normal interpolation for Phong lighting, colour interpolation, and texture application.</string>
    <string name="tutorial_depth_buffer_test">If the depth buffer test is enabled, it will compare each fragment depth with the depth of the sample being written to in the depth buffer (aka Z-buffer). If the comparison fails, the fragment is discarded.\n\nBy default, the depth comparison is GL_LESS; fragments behind the current sample are discarded.</string>
    <string name="tutorial_blending">When blending is enabled, pixels are drawn using a function that blends the incoming (source) RGBA values with the RGBA values that are already in the frame buffer (destination).\n\nThe blending functions generate blending factors from the source and destination values, and the blending equation calculates the resulting colour for the framebuffer.</string>
    
    <string name="navigator_element_array">Element Array Buffer</string>
    <string name="navigator_vertex">Vertex</string>
    <string name="navigator_colour">Colour</string>
    <string name="navigator_normal">Normal</string>
    <string name="navigator_glsl">Compiled GLSL\nshader code</string>
    <string name="navigator_camera_params">Camera\nparameters</string>
    <string name="navigator_projection_params">Projection\nparameters</string>
    <string name="navigator_sample_size">Sample size</string>
    <string name="navigator_winding_direction">Winding\ndirection</string>
    <string name="navigator_culling_mode">Culling\nmode</string>
    <string name="navigator_z_buffer">Z-buffer</string>
    <string name="navigator_depth_func">Depth\ncomparison\nfunction</string>
    <string name="navigator_blend_func">Blending\nfunctions</string>
    <string name="navigator_blend_equation">Blending\nequation</string>
    
	<!-- Depth buffer test comparison functions -->
    <string name="gl_depth_never">Depth comparison never passes</string>
    <string name="gl_depth_less">Passes if the incoming depth is less than the stored depth</string>
    <string name="gl_depth_equal">Passes if the incoming depth is equal to the stored depth</string>
    <string name="gl_depth_lequal">Passes if the incoming depth is less than or equal to the stored depth</string>
    <string name="gl_depth_greater">Passes if the incoming depth is greater than the stored depth</string>
    <string name="gl_depth_notequal">Passes if the incoming depth is not equal to the stored depth</string>
    <string name="gl_depth_gequal">Passes if the incoming depth is greater than or equal to the stored depth</string>
    <string name="gl_depth_always">Depth comparison always passes</string>
    
	<!-- Blending functions - these descriptions are never used-->
    <string name="gl_blend_zero"></string>
    <string name="gl_blend_one"></string>
    <string name="gl_blend_src_color"></string>
    <string name="gl_blend_one_minus_src_color"></string>
    <string name="gl_blend_dst_color"></string>
    <string name="gl_blend_one_minus_dst_color"></string>
    <string name="gl_blend_src_alpha"></string>
    <string name="gl_blend_one_minus_src_alpha"></string>
    <string name="gl_blend_dst_alpha"></string>
    <string name="gl_blend_one_minus_dst_alpha"></string>
    <string name="gl_blend_constant_color"></string>
    <string name="gl_blend_one_minus_constant_color"></string>
    <string name="gl_blend_constant_alpha"></string>
    <string name="gl_blend_one_minus_constant_alpha"></string>
    
	<!-- Blending equations -->
    <string name="gl_blend_add">Source and destination colours are added together</string>
    <string name="gl_blend_sub">Destination colour is subtracted from source colour</string>
    <string name="gl_blend_rev_sub">Source colour is subtracted from destination colour</string>
    
    <string name="help_firstrun_title">First run</string>
    <string name="help_firstrun_desc">Welcome to the Graphics Pipeline Simulator. Tap the help icon at any time for a guided tour of the app.</string>
    
    <string name="help_scene_definition_title">Scene parameters</string>
    <string name="help_scene_definition_desc">Use these options to define the scene which will be simulated, as well as the virtual camera location and parameters. Sensible defaults have been set up for you.</string>
    
    <string name="help_colour_coding_title">Pipeline steps</string>
    <string name="help_colour_coding_desc">The coloured squares denote different groups of pipeline steps which will be simulated. They correspond with steps on the pipeline navigator after you press \'Simulate\'.\n\nMost of these can be configured by tapping them, and will show a summary of their purpose.</string>
    
    <string name="help_lighting_preview_title">Lighting previews</string>
    <string name="help_lighting_preview_desc">Change the lighting preview mode to examine different shaders using the \'Vertex Shading\' and \'Fragment Shading\' options below.</string>
    
    <string name="help_disabled_title">Disabled options</string>
    <string name="help_disabled_desc">Greyed out options cannot be changed but will provide a summary of their action.</string>
    
    <string name="help_simulate_title">When you\'re ready…</string>
    <string name="help_simulate_desc">Tap the Simulate button to build the scene you\'ve configured and start the simulation.</string>
    
    <string name="help_scene_viewer_title">Scene viewer</string>
    <string name="help_scene_viewer_desc">This is where your custom scene is shown at different steps of the graphics pipeline.\n\nSwipe left to advance along the pipeline, or right to move backwards. The next or previous step will be shown on the indicator bar at the bottom of the screen as you swipe.\n\nDouble-tap the scene to toggle \'Move mode\' where you can move and scale the scene using touch gestures.</string>
    
    <string name="help_navigator_title">Pipeline navigator</string>
    <string name="help_navigator_desc">The bottom indicator bar will show you the next or previous pipeline step when you swipe left or right.\n\nSwipe up from the bottom bar to display the pipeline navigator, which shows the steps of the graphics pipeline. Tap any pipeline step to show a summary of its action.</string>

</resources>